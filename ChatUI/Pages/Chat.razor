@page "/chat"
@using Contracts
@using Contracts.Responses
@using LocalChatApp.Data.Enitites
@using LocalChatApp.Models
@using LocalChatApp.Services.Abstraction
@using Microsoft.AspNetCore.SignalR.Client
@using System.Net.Http.Json

@inject IHttpClientFactory ClientFactory
@inject IServerUriService ServerUriService

<h3>Chat</h3>
<h4>Hello, @DeviceInfo.Name!</h4>

<br />

<div class="row bootstrap">
    @if (ChatModel is null)
    {
        <div class="d-flex align-items-center">
            <strong>Loading...</strong>
            <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
        </div>

    }
    else
    {
        <Messages Model="ChatModel" />
    }
</div>

<br />

<MessageNotificationSound />

@code {
    private ChatModel ChatModel;


    protected override async Task OnInitializedAsync()
    {
        var serverUri = await ServerUriService.GetServerUriAsync();

        const int numberOfMessages = 10;

        var client = ClientFactory.CreateClient();
        client.BaseAddress = new Uri(serverUri);

        var response = await client.GetFromJsonAsync<MessagesResponse>($"/getmessages/{numberOfMessages}");

        ChatModel = new ChatModel
        {
            Message = string.Empty,
            Messages = response.Messages
        };

        await base.OnInitializedAsync();
    }

}
