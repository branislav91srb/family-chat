@using Contracts
@using LocalChatApp.Data.Enitites
@using LocalChatApp.Models
@using LocalChatApp.Services.Abstraction
@using Microsoft.AspNetCore.SignalR.Client

@inject IServerUriService ServerUriService
@inject IJSRuntime _jsRuntime;


<div class="col-md-4">
    <!-- DIRECT CHAT PRIMARY -->
    <div class="box box-primary direct-chat direct-chat-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Direct Chat</h3>

            <div class="box-tools pull-right">
                <span data-toggle="tooltip" title="" class="badge bg-light-blue" data-original-title="3 New Messages">3</span>
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-toggle="tooltip" title="Contacts" data-widget="chat-pane-toggle">
                    <i class="fa fa-comments"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <!-- Conversations are loaded here -->


            <div class="direct-chat-messages">

                @foreach (var message in Model.Messages)
                {
                    @if (message.From.Equals("system", StringComparison.OrdinalIgnoreCase))
                    {
                        <!-- Message. Default to the left -->
                        <div class="direct-chat-msg">
                            <div class="direct-chat-info clearfix">
                                <span class="direct-chat-name pull-left">@message.From</span>
                                <span class="direct-chat-timestamp pull-right">@message.SendTime</span>
                            </div>
                            <!-- /.direct-chat-info -->
                            <img class="direct-chat-img" src="https://bootdey.com/img/Content/user_3.jpg" alt="Message User Image" style="width:30px!important;height:30px!important;"><!-- /.direct-chat-img -->
                            <div class="direct-chat-text" style="font-size:10px!important;">
                                @message.Text
                            </div>
                            <!-- /.direct-chat-text -->
                        </div>
                        <!-- /.direct-chat-msg -->
                    }
                    else if (message.From != DeviceInfo.Name)
                    {
                        <!-- Message. Default to the left -->
                        <div class="direct-chat-msg">
                            <div class="direct-chat-info clearfix">
                                <span class="direct-chat-name pull-left">@message.From</span>
                                <span class="direct-chat-timestamp pull-right">@message.SendTime</span>
                            </div>
                            <!-- /.direct-chat-info -->
                            <img class="direct-chat-img" src="https://bootdey.com/img/Content/user_2.jpg" alt="Message User Image"><!-- /.direct-chat-img -->
                            <div class="direct-chat-text">
                                @message.Text
                            </div>
                            <!-- /.direct-chat-text -->
                        </div>
                        <!-- /.direct-chat-msg -->
                    }

                    else
                    {
                        <!-- Message to the right -->
                        <div class="direct-chat-msg right">
                            <div class="direct-chat-info clearfix">
                                <span class="direct-chat-name pull-right">@message.From</span>
                                <span class="direct-chat-timestamp pull-left">@message.SendTime</span>
                            </div>
                            <!-- /.direct-chat-info -->
                            <img class="direct-chat-img" src="https://bootdey.com/img/Content/user_1.jpg" alt="Message User Image"><!-- /.direct-chat-img -->
                            <div class="direct-chat-text">
                                @message.Text
                            </div>
                            <!-- /.direct-chat-text -->
                        </div>
                        <!-- /.direct-chat-msg -->
                    }
                }
            </div>

            <!--/.direct-chat-messages-->
            <!-- Contacts are loaded here -->
            <div class="direct-chat-contacts">
                <ul class="contacts-list">
                    <li>
                        <a href="#">
                            <img class="contacts-list-img" src="https://bootdey.com/img/Content/user_1.jpg">

                            <div class="contacts-list-info">
                                <span class="contacts-list-name">
                                    Count Dracula
                                    <small class="contacts-list-date pull-right">2/28/2015</small>
                                </span>
                                <span class="contacts-list-msg">How have you been? I was...</span>
                            </div>
                            <!-- /.contacts-list-info -->
                        </a>
                    </li>
                    <!-- End Contact Item -->
                </ul>
                <!-- /.contatcts-list -->
            </div>
            <!-- /.direct-chat-pane -->
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            <EditForm Model="Model" OnValidSubmit="SendMessage" autocomplete="off">
                <div class="input-group">
                    <InputText name="message" class="form-control"
                               @bind-Value="Model.Message"
                               @oninput="((e) => MessageChanged(e))"
                               @onkeyup="((e) => SendIfEnter(e))"
                               autocomplete="off" placeholder="Type Message ..." />
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-primary btn-flat" disabled=@(!currentMessageText.Trim().Any())>Send</button>
                    </span>
                </div>
            </EditForm>
        </div>
        <!-- /.box-footer-->
    </div>
    <!--/.direct-chat -->
</div>


@code {
    [Parameter]
    public ChatModel Model { get; set; }

    private HubConnection Connection;

    private string currentMessageText = "";

    protected override async Task OnInitializedAsync()
    {
        var chatUrl = await GetChatServerUrl();

        Connection = new HubConnectionBuilder()
            .WithUrl(chatUrl)
            .Build();

        Connection.On<Message>("ReceiveMessage", ReceiveMessage);

        await Connection.StartAsync();
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(Model.Message))
        {
            return;
        }

        await Connection.SendAsync("SendMessage", DeviceInfo.Name, Model.Message);

        Model.Message = string.Empty;

    }

    public async Task ReceiveMessage(Message message)
    {
        if (string.IsNullOrWhiteSpace(message.Text))
        {
            return;
        }

        Model.Messages.Add(message);
        StateHasChanged();

        if (message.From != DeviceInfo.Name)
        {
            await _jsRuntime.InvokeAsync<string>("PlayNotificationSound", "message-notification-sound");
        }
    }

    private async Task SendIfEnter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await SendMessage();
        }
    }

    private void MessageChanged(ChangeEventArgs e)
    {
        currentMessageText = e.Value.ToString();
    }

    private async Task<string> GetChatServerUrl()
    {
        var hub = "chatHub";
        var serverUri = await ServerUriService.GetServerUriAsync();

        return $"{serverUri}/{hub}";
    }
}